---
layout: post
title:  "Spring Batch (1)"
date:   2019-07-30
description: Spring Batch에서 사용하는 핵심 개념
---

> 본 내용은 [Spring Batch 4.1 버전](https://docs.spring.io/spring-batch/4.1.x/reference/html/index.html) 가이드 문서를 기준으로 작성되었습니다.

## 목차
- [구성]()
- [처리 흐름]()
- [Job]()
- [Job instance]()
- [Job Execution]()
- [Step]()
- [Step Execution]()
- [Execution Context]()
- [Job Repository]()
- [Job Launcher]()
- [Item Reader]()
- [Item Writer]()

## 구성
<figure>
	<img src="{{ 'https://docs.spring.io/spring-batch/4.1.x/reference/html/images/spring-batch-layers.png'}}" alt="결과확인"> 
	<figcaption>Spring Batch 계층 구조</figcaption>
</figure>

   * Application : 개발자가 직접 작성한 비지니스 코드
   * Batch Core : 배치 수행에 필요한 작업 제어
   * Batch Infra : application, core에서 모두 사용되며, 읽고 쓰기 위한 자원들
   
   
## 처리 흐름
<figure>
	<img src="{{ 'https://docs.spring.io/spring-batch/4.1.x/reference/html/images/spring-batch-reference-model.png'}}" alt="결과확인"> 
	<figcaption>Batch Stereotypes</figcaption>
</figure>

   1. Job Launcher가 Job을 실행한다.
   2. Job은 여러개의 Step을 갖을 수 있으며 Job에 정의된 Step들이 실행 된다.
   3. Step은 ItemReader, ItemProcessor, ItemWriter를 갖을 수 있으며 이를 수행한다.
   4. 각 단계에서 Job repository에서 필요한 정보를 가져올 수 있다.
   